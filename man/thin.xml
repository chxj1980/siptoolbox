<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "mansip.dtd">
<!-- $Revision: 1.1 $ $Date: 2005-07-20 01:33:34 $ -->
<MAN>
   <LANGUAGE>eng</LANGUAGE>
   <TITLE>thin</TITLE>
   <TYPE>SIP Toolbox</TYPE>
   <DATE>February 2004</DATE>
   <SHORT_DESCRIPTION name="thin">thinning by border deletion</SHORT_DESCRIPTION>
   <CALLING_SEQUENCE>
      <CALLING_SEQUENCE_ITEM>out = thin(img)</CALLING_SEQUENCE_ITEM>
   </CALLING_SEQUENCE>
   <PARAM>
   <PARAM_INDENT>
      <PARAM_ITEM>
      <PARAM_NAME>img</PARAM_NAME>
      <PARAM_DESCRIPTION>
       Binary image containing one or more binary shapes. (foreground == 1, background == 0),
      </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
      <PARAM_NAME>out</PARAM_NAME>
      <PARAM_DESCRIPTION>
       Internal skeleton, thinned version of the shapes in the input image.
      </PARAM_DESCRIPTION>
      </PARAM_ITEM>
   </PARAM_INDENT>
   </PARAM>
   <DESCRIPTION>
   <P>
      Function <TT>thin</TT> performs thinning of binary objects. It  uses the Zhang-Suen, a de facto standard and simple technique. The resulting image, the skeleton, is not always  connected and is very sensible to noise. It is also slower  than a good skeletonization algorithm (see skel). For thin  shapes, it should work faster and provide better quality.  You will need some pruning criterium to eliminate spurs. </P>
   </DESCRIPTION>
   <EXAMPLE><![CDATA[
       im=gray_imread(SIPDIR+'images/r.gif');
       imshow(im,2);

       skl = thin(im);

       xbasc();
       imshow(im+skl,[]);

       // Quality is definitely inferior to that of good skeletonization
       // methods, as in the following test

       im=gray_imread(SIPDIR+'images/escher.png');
       skl = thin(im);      // Ordinary thinning
       xbasc();
       xset('wdim',400,500);
       subplot(1,2,1);
       imshow(im+skl,[]);
       xset('wdim',800,400);

       skl = skel(im);      // multiscale euclidean skeletonization
       subplot(1,2,2);
       imshow(im+(skl &gt;= 10),[]);
       xset('wdim',800,400);
   ]]></EXAMPLE>
<!-- ================================= -->
<BIBLIO>
      "Practical Computer Vision using C", J. R. Parker, Wiley.
</BIBLIO>
<!-- ================================= -->
<AUTHORS>
   <AUTHORS_ITEM name="Ricardo"> Ricardo Fabbri &lt;ricardofabbri (AT) users DOT sf DOT net&gt; </AUTHORS_ITEM>
</AUTHORS>
<!-- ================================= -->
<SECTION label="Availability">
The latest version of the Scilab Image Processing toolbox can be found at
<P><A href="http://siptoolbox.sourceforge.net">http://siptoolbox.sourceforge.net</A></P>
</SECTION>
<!-- ================================= -->
   <SEE_ALSO>
      <SEE_ALSO_ITEM> <LINK>skel</LINK> </SEE_ALSO_ITEM>
   </SEE_ALSO>
</MAN>
<!-- =================================================== 
           SIP - Scilab Image Processing toolbox
           Copyright (C) 2002-2004  Ricardo Fabbri

       See the file COPYING for license-related issues
     =================================================== -->
