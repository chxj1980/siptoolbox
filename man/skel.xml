<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "mansip.dtd">
<!-- $Revision: 1.1 $ $Date: 2005-07-20 01:33:34 $ -->
<MAN>
<LANGUAGE>eng</LANGUAGE>
<TITLE>skel</TITLE>
<TYPE>SIP Toolbox</TYPE>
<DATE>February 2004</DATE>
<SHORT_DESCRIPTION name="skel">skeletonization, thinning, Medial Axis Transform</SHORT_DESCRIPTION>
<CALLING_SEQUENCE>
   <CALLING_SEQUENCE_ITEM>[skl,dt,lbl] = skel(img [,side, algorithm])</CALLING_SEQUENCE_ITEM>
</CALLING_SEQUENCE>
<PARAM target="in">
<PARAM_INDENT>
   <PARAM_ITEM>
   <PARAM_NAME>img</PARAM_NAME>
   <PARAM_DESCRIPTION>
    Binary image containing one or more binary shapes. (foreground == 1, background == 0), One-pixel-wide regions are ignored (temporary limitation).
   </PARAM_DESCRIPTION>
   </PARAM_ITEM>
   <PARAM_ITEM>
   <PARAM_NAME>side</PARAM_NAME>
   <PARAM_DESCRIPTION>
      <PARAM_INDENT>
         <PARAM_ITEM>
         <PARAM_NAME>&apos;interior&apos;</PARAM_NAME>
         <PARAM_DESCRIPTION>
          if only internal skeleton is desired (DEFAULT)
         </PARAM_DESCRIPTION>
         </PARAM_ITEM>
         <PARAM_ITEM>
            <PARAM_NAME>&apos;exterior&apos;</PARAM_NAME>
         <PARAM_DESCRIPTION>
             if only external skeleton is desired
         </PARAM_DESCRIPTION>
         </PARAM_ITEM>
         <PARAM_ITEM>
            <PARAM_NAME>&apos;both&apos;</PARAM_NAME>
         <PARAM_DESCRIPTION>
        if the background and foreground skeleton must be computed
        at the same time
         </PARAM_DESCRIPTION>
         </PARAM_ITEM>
      </PARAM_INDENT>
   </PARAM_DESCRIPTION>
   </PARAM_ITEM>
   <PARAM_ITEM>
   <PARAM_NAME>algorithm</PARAM_NAME>
   <PARAM_DESCRIPTION>
      <PARAM_INDENT>
         <PARAM_ITEM>
         <PARAM_NAME>&apos;fast euclidean&apos;</PARAM_NAME>
         <PARAM_DESCRIPTION>
          (DEFAULT) will perform a fast O(n) algorithm using the
          euclidean metric. For large and thick shapes, there may be
          a few small errors, which are dispensible for most practical
          applications.
         </PARAM_DESCRIPTION>
         </PARAM_ITEM>
         <PARAM_ITEM>
            <PARAM_NAME>&apos;exact euclidean&apos;</PARAM_NAME>
         <PARAM_DESCRIPTION>
            will perform an exact euclidean algorithm that is very
            much slower.
         </PARAM_DESCRIPTION>
         </PARAM_ITEM>
      </PARAM_INDENT>
   </PARAM_DESCRIPTION>
   </PARAM_ITEM>
</PARAM_INDENT>
</PARAM>
<PARAM target="out">
<PARAM_INDENT>
   <PARAM_ITEM>
   <PARAM_NAME>skl</PARAM_NAME>
   <PARAM_DESCRIPTION>
    The multiscale skeleton image. This is a grayscale image, which may be thresholded to yield a skeleton with varying levels of detail. The greater the threshold, the cleaner is the skeleton. A threshold level of 5 will give a usual skeleton similar to the one obtained by popular thinning methods.
   </PARAM_DESCRIPTION>
   </PARAM_ITEM>
   <PARAM_ITEM>
   <PARAM_NAME>dt</PARAM_NAME>
   <PARAM_DESCRIPTION>
    The euclidean distance transform of the image. It has the squared euclidean distances of any point of the image to the object.
   </PARAM_DESCRIPTION>
   </PARAM_ITEM>
   <PARAM_ITEM>
   <PARAM_NAME>lbl</PARAM_NAME>
   <PARAM_DESCRIPTION>
    Label image. This is the discrete Voronoi Diagram of the boundary pixels of the considered object. Is is a grayscale image indicating the region of influence of each boundary pixel.
   </PARAM_DESCRIPTION>
   </PARAM_ITEM>
</PARAM_INDENT>
</PARAM>
<DESCRIPTION>
<P>
 Function skel performs skeletonization (thinning) of a  binary object. The resulting medial axis is multi-scale,  meaning that it can be progressively pruned to eliminate  detail. This pruning is done by thresholding the output  skeleton image. </P>
   <P>
 The algorithm computes skeletons that are guaranteed to be  connected over all scales of simplification. The skeletons  are computed using the euclidean metric. This has the  advantage to produce high-quality, isotropic and well-centered skeletons in the shape. However the exact algorithm  is computationally intensive. </P>
   <P>
 The radius of the maximal balls associated with the skeleton points are stored in the distance transform output  image. </P>
</DESCRIPTION>
<EXAMPLE><![CDATA[
    initial_dir = PWD;
    chdir (SIPDIR + 'images');
    xset('auto clear', 'on');

    im=gray_imread('escher.png');
    imshow(im,2);
    [skl,dt,vor] = skel(im);

    // Fine detail
    sklt = (skl &gt;= 5);
    imshow(im+sklt,[]);

    // Less detail
    sklt = (skl &gt;= 20);
    imshow(im+sklt,[]);

    // The Distance Transform
    imshow(sqrt(dt),[]);

    // The Influence/Voronoi diagram of each boundary pixel
    imshow(vor+1,rand(maxi(vor)+1,3));   // each region maps to a random color

    // Let's see if computation is really fast
    big = mogrify(im,['-sample','1000x']);
    size(big)
    skl = skel(big);
    imshow(big + (skl &gt;= 50),[]);


    xset('auto clear', 'off');
    chdir(initial_dir);
]]></EXAMPLE>
<!-- ================================= -->
<BIBLIO>
   <P>
   For the fast euclidean algorithm:
   "Multiscale Skeletons by Image Foresting Transform
   and its Application to Neuromorphometry", 
   A.X. Falcao, L. da F. Costa, B.S. da Cunha,
   Pattern Recognition, 2002. 
   </P><P>
   For the exact euclidean algorithm:
   </P><P>
   "Multiresolution shape representation without border shifting",
   L. da F. Costa, L. F. Estrozi, Electronics Letters, no. 21, vol. 35, 
   pp. 1829-1830, 1999.
   </P><P>
"Shape Analysis and Classification", 
L. da F. Costa and R.M. Cesar Jr., CRC Press. 
   </P>
</BIBLIO>
<!-- ================================= -->
<SECTION label="Known Bugs">
   This function may not work for some kinds of input that is 
   already thin in some parts; it is a good idea to apply
   morphological dilation and closing before applying <TT>skel</TT>.
</SECTION>
<!-- ================================= -->
<AUTHORS>
   <AUTHORS_ITEM name="Ricardo"> Ricardo Fabbri &lt;ricardofabbri (AT) users DOT sf DOT net&gt; </AUTHORS_ITEM>
</AUTHORS>
<!-- ================================= -->
<SECTION label="Availability">
The latest version of the Scilab Image Processing toolbox can be found at
<P><A href="http://siptoolbox.sourceforge.net">http://siptoolbox.sourceforge.net</A></P>
</SECTION>
<!-- ================================= -->
   <SEE_ALSO>
      <SEE_ALSO_ITEM> <LINK>thin</LINK> </SEE_ALSO_ITEM>
      <SEE_ALSO_ITEM>reconstruction (not done yet...)</SEE_ALSO_ITEM>
   </SEE_ALSO>
</MAN>
<!-- =================================================== 
           SIP - Scilab Image Processing toolbox
           Copyright (C) 2002-2004  Ricardo Fabbri

       See the file COPYING for license-related issues
     =================================================== -->
